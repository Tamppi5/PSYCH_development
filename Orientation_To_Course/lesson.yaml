- Class: meta
  Course: PsychMetHCI - Statistical Methods in Human-Computer Interaction
  Lesson: Orientation_To_Course
  Author: Robin Welsch & Tapio Tuloisela
  Type: Standard
  Organization: Aalto University
  Version: 4.0.0
 
#1
- Class: text
  Output: Welcome to PsychMetHCI- Statistical Methods in Psychology and Human-Computer Interaction. In this course, you will learn about psychological research methods and statistics for analyzing human behavior and mental processes in different contexts. The course was originally developed by Kevin R. Carriere & Jason Kilgore.

- Class: text
  Output: In the course, we provide you with the knowledge and tools to plan studies and perform fundamental analyses in R, including transforming data, visualizing data, and engaging in various types of hypothesis tests.

- Class: text
  Output: Each module should take between 15 to 40 minutes to complete.

- Class: text
  Output: The modules will follow the same basic formula.
  
- Class: text
  Output: First, we will present you with Notes for the module. These notes are designed to run whenever you need - they use datasets built within R, so you can turn to these notes if you ever need a refresher on how a function works.

- Class: figure
  Output: We recommend that as soon as the Notes pop up, you click the top left corner of RStudio, where there is this icon (shown in the plot window).
  Figure: figure1.R
  FigureType: new
  
- Class: figure
  Output: From there, choose the dropdown option that says R Script (it looks like this icon). 
  Figure: figure2.R
  FigureType: new
  
- Class: text
  Output: We recommend you copy and paste the notes for the Module into this separate Script and save it as something memorable in a place you can find it. 

- Class: text
  Output: Once you've copied and pasted the Notes, the instructions will tell you to type submit() to move on to the module.
  
- Class: text
  Output: The Notes script will look like this (hit enter to see).

- Class: script
  Output: Here are some notes for this module. When you've saved the notes in your own personal Notes R Script, type submit().
  AnswerTests: script_results_identical('saved')
  Hint: Make sure the last line in your script says saved <- "Y".
  Script: Notes.R

- Class: text
  Output: After that, the module will teach the lesson. As the swirl() instructions mentioned, if you see a ..., it means hit enter. If you're lost, getting the wrong answer will give you a hint. If you're still confused, you can use skip() to get the answer given to you.
  
- Class: text
  Output: The === bar represents your progress through the module, along with the percentage number to indicate how far into the module you are.

- Class: cmd_question
  Output: Some of the questions may be command-line questions. It would be best if you typed in your answers into the Console. For example, if I wanted you to calculate 2+2, I might say - take 2 and add 2 to it. Try that now. 
  CorrectAnswer: 2+2
  Hint: Did you try adding the two numbers together?
  AnswerTests: omnitest(correctExpr='2+2')
  
- Class: mult_question
  Output: Other questions may be multiple-choice questions. To answer these, you can choose the number corresponding to the answer or type the answer out yourself. For example, the name of the course is PsychMetHCI. What is the name of the course?
  AnswerChoices: PsychMetHCI; R Programming; Swirl; Don't Think Too Hard
  CorrectAnswer: PsychMetHCI
  AnswerTests: omnitest(correctVal='PsychMetHCI')
  Hint: Try typing PsychMetHCI or choose the number that represents that answer. 
  
- Class: text
  Output: Finally, other questions will show scripts and ask you to fill in the correct answers. We use these when you need to see how coding is written in a script instead of in the Console.

- Class: text
  Output: All citations for any data we are using (all open access data) and any citations for any statistical choices are provided throughout the course.

- Class: text
  Output: We encourage you to consider the contents of the modules carefully while working through them and that you revise parts that might seem unclear on the first go.
